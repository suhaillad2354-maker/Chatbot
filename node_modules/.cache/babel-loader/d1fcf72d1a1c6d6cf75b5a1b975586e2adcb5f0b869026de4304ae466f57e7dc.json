{"ast":null,"code":"import{createContext,useState}from\"react\";import run from\"../config/dhatchan\";import{jsx as _jsx}from\"react/jsx-runtime\";export const Context=/*#__PURE__*/createContext();const ContextProvider=props=>{const[input,settInput]=useState(\"\");const[recent,setRecent]=useState(\"\");const[prevPrompt,setPrevPrompt]=useState([]);const[showResult,setShowResult]=useState(false);const[loading,setLoading]=useState(false);const[resultData,setResultData]=useState(\"\");const delayPara=(index,nextWord)=>{setTimeout(function(){setResultData(prev=>prev+nextWord);},75*index);};const newChat=()=>{setLoading(false);setShowResult(false);};const onSent=async prompt=>{setResultData(\"\");setLoading(true);setShowResult(true);let response;if(prompt!==undefined){response=await run(prompt);setRecent(prompt);}else{setPrevPrompt=prev=>[...prev,input];setRecent(input);response=await run(input);}if(input!==\"\")setPrevPrompt(prev=>[...prev,input]);let responseArray=response.split(\"**\");let newResponse=\"\";for(let i=0;i<responseArray.length;i++){if(i===0||i%2!==1){newResponse+=responseArray[i];}else{newResponse+=\"<b>\"+responseArray[i]+\"</b>\";}}let newResponse2=newResponse.split(\"*\").join(\"<br/>\");let newResponseArray=newResponse2.split(\" \");for(let i=0;i<newResponseArray.length;i++){const nextWord=newResponseArray[i];delayPara(i,nextWord+\" \");}setResultData(newResponse2);setLoading(false);settInput(\"\");};const contextValue={prevPrompt,setPrevPrompt,onSent,setRecent,recent,showResult,loading,resultData,input,settInput,newChat};return/*#__PURE__*/_jsx(Context.Provider,{value:contextValue,children:props.children});};export default ContextProvider;","map":{"version":3,"names":["createContext","useState","run","jsx","_jsx","Context","ContextProvider","props","input","settInput","recent","setRecent","prevPrompt","setPrevPrompt","showResult","setShowResult","loading","setLoading","resultData","setResultData","delayPara","index","nextWord","setTimeout","prev","newChat","onSent","prompt","response","undefined","responseArray","split","newResponse","i","length","newResponse2","join","newResponseArray","contextValue","Provider","value","children"],"sources":["/home/smiley/Chatbot/Chatbot/src/context/Context.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport run from \"../config/dhatchan\";\n\nexport const Context = createContext();\n\nconst ContextProvider = (props) => {\n    const[input,settInput]=useState(\"\");\n    const[recent,setRecent]=useState(\"\");\n    const[prevPrompt,setPrevPrompt]=useState([]);\n    const[showResult,setShowResult]=useState(false);\n    const[loading,setLoading]=useState(false);\n    const[resultData,setResultData]=useState(\"\");\n\n    const delayPara = (index,nextWord) => {\n        setTimeout(function(){\n            setResultData(prev=>prev+nextWord);\n        },75*index)\n    }\n    const newChat = () =>{\n        setLoading(false)\n        setShowResult(false)\n    }\n    const onSent = async(prompt) => {\n\n        setResultData(\"\")\n        setLoading(true)\n        setShowResult(true)\n        let response;\n        if(prompt !== undefined){\n            response = await run(prompt)\n            setRecent(prompt)\n        }\n        else{\n            setPrevPrompt=(prev=>[...prev,input])\n            setRecent(input)\n            response = await run(input)\n        }\n        if (input !==\"\")\n        setPrevPrompt(prev=>[...prev,input])\n        \n        let responseArray = response.split(\"**\");\n        let newResponse=\"\";\n        for (let i=0;i<responseArray.length;i++)\n        {\n            if(i===0 || i%2 !== 1){\n                newResponse += responseArray[i];\n            }\n        \n            else{\n                newResponse += \"<b>\" +responseArray[i]+\"</b>\"\n            }\n        }\n        let newResponse2 = newResponse.split(\"*\").join(\"<br/>\")\n        let newResponseArray = newResponse2.split(\" \");\n        for(let i=0; i<newResponseArray.length;i++)\n        {\n            const nextWord = newResponseArray[i];\n            delayPara(i,nextWord+\" \")\n        }\n        setResultData(newResponse2)\n        setLoading(false)\n        settInput(\"\")\n    }\n\n\n    const contextValue = {\n        prevPrompt,\n        setPrevPrompt,\n        onSent,\n        setRecent,\n        recent,\n        showResult,\n        loading,\n        resultData,\n        input,\n        settInput,\n        newChat,\n    }\n    return(\n        <Context.Provider value={contextValue}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n\nexport default ContextProvider"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}